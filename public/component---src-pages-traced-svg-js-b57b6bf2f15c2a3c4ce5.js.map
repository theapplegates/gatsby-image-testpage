{"version":3,"file":"component---src-pages-traced-svg-js-b57b6bf2f15c2a3c4ce5.js","mappings":"iMAyCA,UAhCkB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OAChB,QAAC,IAAD,CACEA,SAAUA,EACVC,OAAOC,EAAAA,EAAAA,GAASH,EAAKI,WAAWC,WAChCC,WAAU,IAAMN,EAAKI,WAAWG,MAAtB,QAAmCP,EAAKI,WAAWI,OAAnD,wBAEV,QAAC,IAAD,iCACA,QAAC,EAAAC,EAAD,CACEP,OAAOC,EAAAA,EAAAA,GAASH,EAAKU,cAAcL,WACnCM,IAAG,IAAMX,EAAKU,cAAcH,MAAzB,QAAsCP,EAAKU,cAAcF,OAAzD,yBAEL,oCAEE,aAAGI,KAAK,kDAAR,cAFF,mKAOA,yDACsC,+CAAqC,IAD3E,wBAEsB,+CAFtB,qCAKA,iDACA,QAAC,IAAD,CAAcC,OAAQb,EAAKc,qBAAqBC,SAChD,QAAC,EAAAN,EAAD,CACEP,OAAOC,EAAAA,EAAAA,GAASH,EAAKgB,eAAeX,WACpCM,IAAG,IAAMX,EAAKgB,eAAeT,MAA1B,QAAuCP,EAAKgB,eAAeR,OAA3D","sources":["webpack://using-gatsby-image/./src/pages/traced-svg.js"],"sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport PageTitle from \"../components/page-title\"\nimport ImageGallery from \"../components/image-gallery\"\n\nimport Layout from \"../components/layout\"\n\nconst TracedSVG = ({ data, location }) => (\n  <Layout\n    location={location}\n    image={getImage(data.coverImage.localFile)}\n    imageTitle={`“${data.coverImage.title}” by ${data.coverImage.credit} (via unsplash.com)`}\n  >\n    <PageTitle>Traced SVG Placeholders</PageTitle>\n    <GatsbyImage\n      image={getImage(data.floatingImage.localFile)}\n      alt={`“${data.floatingImage.title}” by ${data.floatingImage.credit} (via unsplash.com)`}\n    />\n    <p>\n      Generates a{` `}\n      <a href=\"https://github.com/gatsbyjs/gatsby/issues/2435\">traced SVG</a> of\n      the image and returns the SVG source as an ”optimized URL-encoded” data:\n      URI. This provides an alternative to the default inline base64 placeholder\n      image.\n    </p>\n    <p>\n      To make use of this technique, pass <code>placeholder: TRACED_SVG</code>{\" \"}\n      to the resolver, or <code>placeholder=\"tracedSVG\"</code> with the\n      StaticImage component.\n    </p>\n    <h2>Unsplash SVG Image Gallery</h2>\n    <ImageGallery images={data.galleryImagesCropped.edges} />\n    <GatsbyImage\n      image={getImage(data.fullWidthImage.localFile)}\n      alt={`“${data.fullWidthImage.title}” by ${data.fullWidthImage.credit} (via unsplash.com)`}\n    />\n  </Layout>\n)\n\nexport default TracedSVG\n\nexport const query = graphql`\n  {\n    coverImage: unsplashImagesYaml(title: { eq: \"Polaroid Pronto 600\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(\n            width: 720\n            tracedSVGOptions: { background: \"#fff\", color: \"#663399\" }\n            transformOptions: { cropFocus: CENTER }\n            placeholder: TRACED_SVG\n            aspectRatio: 0.5\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n    floatingImage: unsplashImagesYaml(title: { eq: \"Pug without hoodie\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(\n            width: 200\n            placeholder: TRACED_SVG\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n    fullWidthImage: unsplashImagesYaml(title: { eq: \"City from above\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(\n            width: 480\n            placeholder: TRACED_SVG\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n    galleryImages: allUnsplashImagesYaml(\n      filter: { gallery: { eq: true } }\n      limit: 10\n    ) {\n      edges {\n        node {\n          credit\n          title\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                width: 380\n                quality: 70\n                tracedSVGOptions: { background: \"#fbfafc\", color: \"#dbd4e2\" }\n                placeholder: TRACED_SVG\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n    galleryImagesCropped: allUnsplashImagesYaml(\n      filter: { gallery: { eq: true } }\n      skip: 10\n    ) {\n      edges {\n        node {\n          credit\n          title\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                width: 380\n                height: 380\n                quality: 70\n                tracedSVGOptions: { background: \"#fbfafc\", color: \"#dbd4e2\" }\n                placeholder: TRACED_SVG\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","image","getImage","coverImage","localFile","imageTitle","title","credit","G","floatingImage","alt","href","images","galleryImagesCropped","edges","fullWidthImage"],"sourceRoot":""}