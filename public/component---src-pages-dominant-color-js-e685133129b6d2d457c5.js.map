{"version":3,"file":"component---src-pages-dominant-color-js-e685133129b6d2d457c5.js","mappings":"iMA6CA,UAtCsB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACpB,QAAC,IAAD,CACEA,SAAUA,EACVC,OAAOC,EAAAA,EAAAA,GAASH,EAAKI,WAAWC,WAChCC,WAAU,IAAMN,EAAKI,WAAWG,MAAtB,QAAmCP,EAAKI,WAAWI,OAAnD,wBAEV,QAAC,IAAD,qCACA,QAAC,EAAAC,EAAD,CACEP,OAAOC,EAAAA,EAAAA,GAASH,EAAKU,cAAcL,WACnCM,IAAG,IAAMX,EAAKU,cAAcH,MAAzB,QAAsCP,EAAKU,cAAcF,OAAzD,yBAEL,iMAKA,8DACA,0XAQA,0HAIA,sDACA,QAAC,IAAD,CAAcI,OAAQZ,EAAKa,qBAAqBC,SAChD,QAAC,EAAAL,EAAD,CACEP,OAAOC,EAAAA,EAAAA,GAASH,EAAKe,eAAeV,WACpCM,IAAG,IAAMX,EAAKe,eAAeR,MAA1B,QAAuCP,EAAKe,eAAeP,OAA3D","sources":["webpack://using-gatsby-image/./src/pages/dominant-color.js"],"sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport ImageGallery from \"../components/image-gallery\"\nimport PageTitle from \"../components/page-title\"\nimport Layout from \"../components/layout\"\n\nconst DominantColor = ({ data, location }) => (\n  <Layout\n    location={location}\n    image={getImage(data.coverImage.localFile)}\n    imageTitle={`“${data.coverImage.title}” by ${data.coverImage.credit} (via unsplash.com)`}\n  >\n    <PageTitle>Dominant Color Placeholders</PageTitle>\n    <GatsbyImage\n      image={getImage(data.floatingImage.localFile)}\n      alt={`“${data.floatingImage.title}” by ${data.floatingImage.credit} (via unsplash.com)`}\n    />\n    <p>\n      The default Dominant color technique uses progressive loading to make a\n      fast, visually pleasing experience without waiting for a full-resolution\n      image with a blank screen.\n    </p>\n    <h2>Progressive Loading with Minimal Effort</h2>\n    <p>\n      Dominant color creates a properly sized div with a background color\n      generated based on your specific image. When the page loads, the div will\n      load first for quick display while the larger image file is downloaded and\n      displayed. This provides a nice visual effect and improves page\n      performance while removing the need for layout shifts when the image\n      loads.\n    </p>\n    <p>\n      This technique is the default behavior when querying for an image with\n      GraphQL or using StaticImage.\n    </p>\n    <h2>Unsplash Dominant Color Gallery</h2>\n    <ImageGallery images={data.galleryImagesCropped.edges} />\n    <GatsbyImage\n      image={getImage(data.fullWidthImage.localFile)}\n      alt={`“${data.fullWidthImage.title}” by ${data.fullWidthImage.credit} (via unsplash.com)`}\n    />\n  </Layout>\n)\n\nexport default DominantColor\n\nexport const query = graphql`\n  {\n    coverImage: unsplashImagesYaml(title: { eq: \"Plant with leaves\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(\n            width: 720\n            aspectRatio: 0.5\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n    floatingImage: unsplashImagesYaml(title: { eq: \"Pug without hoodie\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(\n            width: 200\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n    fullWidthImage: unsplashImagesYaml(title: { eq: \"City from above\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(\n            width: 480\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n    galleryImagesCropped: allUnsplashImagesYaml(\n      filter: { gallery: { eq: true } }\n      skip: 10\n    ) {\n      edges {\n        node {\n          credit\n          title\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                width: 380\n                height: 380\n                quality: 70\n                placeholder: DOMINANT_COLOR\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","image","getImage","coverImage","localFile","imageTitle","title","credit","G","floatingImage","alt","images","galleryImagesCropped","edges","fullWidthImage"],"sourceRoot":""}