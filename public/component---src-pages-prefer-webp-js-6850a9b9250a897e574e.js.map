{"version":3,"file":"component---src-pages-prefer-webp-js-6850a9b9250a897e574e.js","mappings":"wMAKA,IAFkB,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OAAkB,cAAIC,IAAG,GAAqBD,K,+ECwChE,UApCmB,SAAC,GAAD,IAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACjB,QAAC,IAAD,CACEA,SAAUA,EACVC,OAAOC,EAAAA,EAAAA,GAASH,EAAKI,WAAWC,WAChCC,WAAU,IAAMN,EAAKI,WAAWG,MAAtB,QAAmCP,EAAKI,WAAWI,OAAnD,wBAEV,QAAC,IAAD,qBACA,QAAC,EAAAC,EAAD,CACEP,OAAOC,EAAAA,EAAAA,GAASH,EAAKU,cAAcL,WACnCM,IAAG,IAAMX,EAAKU,cAAcH,MAAzB,QAAsCP,EAAKU,cAAcF,OAAzD,yBAEL,iQAI6B,6CAJ7B,aAME,6CANF,MAQA,gCACa,8BADb,wBACwD,KACtD,iCAFF,wCAEgE,KAC9D,0CAHF,8JAK8C,8BAL9C,oHAO+B,8BAP/B,cASA,QAAC,EAAAC,EAAD,CACEP,OAAOC,EAAAA,EAAAA,GAASH,EAAKY,eAAeP,WACpCM,IAAG,IAAMX,EAAKY,eAAeL,MAA1B,QAAuCP,EAAKY,eAAeJ,OAA3D,yBAEL","sources":["webpack://using-gatsby-image/./src/components/page-title.js","webpack://using-gatsby-image/./src/pages/prefer-webp.js"],"sourcesContent":["import React from \"react\"\nimport { css } from \"@emotion/css\"\n\nconst PageTitle = ({ children }) => <h2 css={{ marginTop: 0 }}>{children}</h2>\n\nexport default PageTitle\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport PageTitle from \"../components/page-title\"\nimport Layout from \"../components/layout\"\n\nconst PreferWebp = ({ data, location }) => (\n  <Layout\n    location={location}\n    image={getImage(data.coverImage.localFile)}\n    imageTitle={`“${data.coverImage.title}” by ${data.coverImage.credit} (via unsplash.com)`}\n  >\n    <PageTitle>Prefer WebP</PageTitle>\n    <GatsbyImage\n      image={getImage(data.floatingImage.localFile)}\n      alt={`“${data.floatingImage.title}” by ${data.floatingImage.credit} (via unsplash.com)`}\n    />\n    <p>\n      WebP is a modern image format that provides both lossless and lossy\n      compression for images on the web. This format can reduce the filesize\n      considerably compared to JPG and PNG files. WebP images are generated\n      automatically when you use <strong>gatsby-plugin-image</strong> with\n      {` `}\n      <strong>gatsby-plugin-sharp</strong>.\n    </p>\n    <p>\n      The use of <strong>WebP</strong> is controlled by the{\" \"}\n      <strong>formats</strong> array and can be configured via your{\" \"}\n      <strong>gatsby-config.js</strong> file if you want to apply it to all\n      images in your site. Alternatively, it can be part of your GraphQL query\n      or passed via props when using StaticImage. <strong>AVIF</strong> is also\n      supported. By default, the original image format will be used as fallback\n      for browsers that don't have <strong>WebP</strong> support.\n    </p>\n    <GatsbyImage\n      image={getImage(data.fullWidthImage.localFile)}\n      alt={`“${data.fullWidthImage.title}” by ${data.fullWidthImage.credit} (via unsplash.com)`}\n    />\n    <p />\n  </Layout>\n)\n\nexport default PreferWebp\n\nexport const query = graphql`\n  {\n    coverImage: unsplashImagesYaml(title: { eq: \"Pug with yellow raincoat\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED, width: 720, aspectRatio: 0.5)\n        }\n      }\n    }\n    floatingImageMobile: unsplashImagesYaml(title: { eq: \"Cacti\" }) {\n      localFile {\n        childImageSharp {\n          gatsbyImageData(width: 120, layout: FIXED)\n        }\n      }\n    }\n    floatingImage: unsplashImagesYaml(title: { eq: \"Cacti\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(width: 200, layout: FIXED)\n        }\n      }\n    }\n    fullWidthImage: unsplashImagesYaml(title: { eq: \"Tennis court\" }) {\n      credit\n      title\n      localFile {\n        childImageSharp {\n          gatsbyImageData(width: 600, layout: CONSTRAINED)\n        }\n      }\n    }\n  }\n`\n"],"names":["children","css","data","location","image","getImage","coverImage","localFile","imageTitle","title","credit","G","floatingImage","alt","fullWidthImage"],"sourceRoot":""}